<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>T·ª∑ Gi√° & T√°c ƒê·ªông T·ªõi Ng√†nh XƒÉng D·∫ßu</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Be+Vietnam+Pro:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <!-- Chosen Palette: Calm Neutrals (Stone, Slate, Teal) -->
    <!-- Application Structure Plan: A single-page, scroll-based educational narrative. It starts with the basic definition of an exchange rate, provides a hands-on simulator for tangible understanding, then connects this concept to the petroleum industry. The core is an interactive analysis section where users can toggle between rising and falling exchange rate scenarios to see the direct impact on import costs visualized in a dynamic chart and explained in adjacent text. This guided, interactive flow is chosen to make a complex economic topic accessible and easy to digest for a general audience. -->
    <!-- Visualization & Content Choices: 1. Definition: HTML/CSS diagram for simplicity and clarity (Goal: Inform). 2. Simulator: Slider and input fields for hands-on learning (Goal: Engage, Inform). 3. Petroleum Link: HTML/CSS flowchart to show the process (Goal: Organize). 4. Impact Analysis: A dynamic Chart.js bar chart paired with toggle buttons and updating text blocks. This allows direct comparison and shows change effectively (Goal: Compare, Change). The chart visually reinforces the text, making the cause-and-effect relationship intuitive. Justification: These choices prioritize interactivity and direct feedback to enhance user understanding over static presentation. -->
    <!-- CONFIRMATION: NO SVG graphics used. NO Mermaid JS used. -->
    <style>
        body {
            font-family: 'Be Vietnam Pro', sans-serif;
            background-color: #f8fafc;
        }
        .chart-container {
            position: relative;
            width: 100%;
            max-width: 600px;
            margin-left: auto;
            margin-right: auto;
            height: 350px;
            max-height: 400px;
        }
        @media (min-width: 768px) {
            .chart-container {
                height: 400px;
            }
        }
        .flow-arrow {
            position: relative;
            padding: 0 40px;
        }
        .flow-arrow::after {
            content: '‚Üí';
            position: absolute;
            right: 0;
            top: 50%;
            transform: translateY(-50%) scale(2);
            color: #0d9488;
        }
        .btn-active {
            background-color: #0d9488 !important;
            color: white !important;
            box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
        }
        .loader {
            border: 4px solid #f3f3f3;
            border-top: 4px solid #0d9488;
            border-radius: 50%;
            width: 32px;
            height: 32px;
            animation: spin 1s linear infinite;
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body class="text-slate-700">

    <header class="bg-white shadow-sm sticky top-0 z-10">
        <div class="container mx-auto px-4 py-4 flex justify-between items-center">
            <h1 class="text-xl md:text-2xl font-bold text-teal-700">T·ª∑ Gi√° & Ng√†nh XƒÉng D·∫ßu</h1>
            <nav class="hidden md:flex space-x-6 text-slate-600">
                <a href="#section-1" class="hover:text-teal-600">T·ª∑ gi√° l√† g√¨?</a>
                <a href="#section-2" class="hover:text-teal-600">M√¥ ph·ªèng</a>
                <a href="#section-3" class="hover:text-teal-600">T√°c ƒë·ªông</a>
                <a href="#section-5" class="hover:text-teal-600">Ph√¢n t√≠ch AI</a>
            </nav>
        </div>
    </header>

    <main class="container mx-auto px-4 py-8 md:py-12">

        <section id="section-1" class="mb-16 text-center">
            <h2 class="text-3xl font-bold mb-4 text-slate-800">1. T·ª∑ Gi√° H·ªëi ƒêo√°i L√† G√¨?</h2>
            <p class="max-w-3xl mx-auto text-lg mb-8 text-slate-600">
                Hi·ªÉu m·ªôt c√°ch ƒë∆°n gi·∫£n, t·ª∑ gi√° h·ªëi ƒëo√°i l√† gi√° c·ªßa m·ªôt ƒë·ªìng ti·ªÅn n√†y khi ƒë∆∞·ª£c quy ƒë·ªïi sang m·ªôt ƒë·ªìng ti·ªÅn kh√°c. N√≥ cho bi·∫øt b·∫°n c·∫ßn bao nhi√™u ƒë∆°n v·ªã ti·ªÅn t·ªá c·ªßa qu·ªëc gia B ƒë·ªÉ mua m·ªôt ƒë∆°n v·ªã ti·ªÅn t·ªá c·ªßa qu·ªëc gia A.
            </p>
            <div class="flex justify-center items-center space-x-4 md:space-x-8 p-6 bg-white rounded-xl shadow-lg max-w-xl mx-auto">
                <div class="text-center">
                    <span class="text-5xl">üá∫üá∏</span>
                    <p class="font-semibold mt-2">1 USD</p>
                </div>
                <div class="text-5xl font-light text-slate-400">‚âà</div>
                <div class="text-center">
                    <span class="text-5xl">üáªüá≥</span>
                    <p class="font-semibold mt-2">25,450 VND</p>
                    <p class="text-xs text-slate-500">(V√≠ d·ª•)</p>
                </div>
            </div>
        </section>

        <section id="section-2" class="mb-16">
            <h2 class="text-3xl font-bold mb-2 text-center text-slate-800">2. M√¥ Ph·ªèng T∆∞∆°ng T√°c</h2>
            <p class="text-center text-lg mb-8 text-slate-600">H√£y th·ª≠ thay ƒë·ªïi t·ª∑ gi√° ƒë·ªÉ xem gi√° c·ªßa m·ªôt m√≥n h√†ng nh·∫≠p kh·∫©u thay ƒë·ªïi nh∆∞ th·∫ø n√†o.</p>
            <div class="grid md:grid-cols-2 gap-8 items-center bg-white p-8 rounded-xl shadow-lg">
                <div>
                    <div class="mb-6">
                        <label for="usd-price" class="block font-medium mb-2">Gi√° s·∫£n ph·∫©m (USD)</label>
                        <input type="number" id="usd-price" value="80" class="w-full p-3 border border-slate-300 rounded-lg focus:ring-2 focus:ring-teal-500 focus:border-teal-500 outline-none">
                    </div>
                    <div>
                        <label for="exchange-rate-slider" class="block font-medium mb-2">T·ª∑ gi√° USD/VND: <span id="rate-display" class="font-bold text-teal-600">25,000</span></label>
                        <input type="range" id="exchange-rate-slider" min="23000" max="27000" step="50" value="25000" class="w-full h-2 bg-slate-200 rounded-lg appearance-none cursor-pointer">
                    </div>
                </div>
                <div class="text-center bg-teal-50 p-8 rounded-xl">
                    <p class="text-lg text-slate-600 mb-2">Gi√° quy ƒë·ªïi sang VND</p>
                    <p id="vnd-price" class="text-4xl font-bold text-teal-700">2,000,000 VND</p>
                </div>
            </div>
        </section>

        <section id="section-3" class="mb-16">
            <h2 class="text-3xl font-bold mb-2 text-center text-slate-800">3. T·ª∑ Gi√° ·∫¢nh H∆∞·ªüng T·ªõi XƒÉng D·∫ßu Nh∆∞ Th·∫ø N√†o?</h2>
            <p class="text-center text-lg mb-8 text-slate-600">
                Vi·ªát Nam nh·∫≠p kh·∫©u m·ªôt ph·∫ßn l·ªõn d·∫ßu th√¥ v√† xƒÉng th√†nh ph·∫©m t·ª´ th·ªã tr∆∞·ªùng th·∫ø gi·ªõi. T·∫•t c·∫£ c√°c giao d·ªãch n√†y ƒë·ªÅu ƒë∆∞·ª£c thanh to√°n b·∫±ng ƒë·ªìng ƒê√¥ la M·ªπ (USD).
            </p>
            <div class="bg-white p-8 rounded-xl shadow-lg">
                <p class="text-center font-semibold mb-6 text-lg">Quy tr√¨nh c∆° b·∫£n:</p>
                <div class="flex flex-col md:flex-row justify-around items-center text-center">
                    <div class="mb-6 md:mb-0 md:flow-arrow">
                        <div class="w-24 h-24 mx-auto bg-slate-100 rounded-full flex items-center justify-center mb-2">üõ¢Ô∏è</div>
                        <h3 class="font-bold">Th·ªã tr∆∞·ªùng Th·∫ø gi·ªõi</h3>
                        <p class="text-sm">Gi√° d·∫ßu ƒë∆∞·ª£c ni√™m y·∫øt<br>v√† giao d·ªãch b·∫±ng <span class="font-bold text-red-600">USD</span></p>
                    </div>
                    <div class="mb-6 md:mb-0 md:flow-arrow">
                        <div class="w-24 h-24 mx-auto bg-slate-100 rounded-full flex items-center justify-center mb-2">üè¢</div>
                        <h3 class="font-bold">Doanh nghi·ªáp Vi·ªát Nam</h3>
                        <p class="text-sm">Ph·∫£i d√πng VND mua USD<br>ƒë·ªÉ thanh to√°n ti·ªÅn h√†ng</p>
                    </div>
                    <div>
                        <div class="w-24 h-24 mx-auto bg-slate-100 rounded-full flex items-center justify-center mb-2">‚õΩ</div>
                        <h3 class="font-bold">Ng∆∞·ªùi ti√™u d√πng Vi·ªát Nam</h3>
                        <p class="text-sm">Mua xƒÉng t·∫°i c√¢y xƒÉng<br>b·∫±ng <span class="font-bold text-blue-600">VND</span></p>
                    </div>
                </div>
                <p class="mt-8 text-center text-slate-600 bg-slate-50 p-4 rounded-lg">
                    Do ƒë√≥, b·∫•t k·ª≥ s·ª± thay ƒë·ªïi n√†o c·ªßa t·ª∑ gi√° USD/VND ƒë·ªÅu ·∫£nh h∆∞·ªüng tr·ª±c ti·∫øp ƒë·∫øn <span class="font-bold">chi ph√≠ ƒë·∫ßu v√†o</span> c·ªßa c√°c doanh nghi·ªáp xƒÉng d·∫ßu, v√† cu·ªëi c√πng l√† <span class="font-bold">gi√° b√°n l·∫ª</span> ƒë·∫øn tay ng∆∞·ªùi d√¢n.
                </p>
            </div>
        </section>
        
        <section id="section-4" class="mb-16">
            <h2 class="text-3xl font-bold mb-2 text-center text-slate-800">4. Ph√¢n T√≠ch K·ªãch B·∫£n T√°c ƒê·ªông</h2>
            <p class="text-center text-lg mb-8 text-slate-600">Ch·ªçn m·ªôt k·ªãch b·∫£n ƒë·ªÉ xem t·ª∑ gi√° t√°c ƒë·ªông ƒë·∫øn chi ph√≠ nh·∫≠p kh·∫©u m·ªôt th√πng d·∫ßu nh∆∞ th·∫ø n√†o.</p>
            
            <div class="flex justify-center space-x-4 mb-8">
                <button id="btn-increase" class="px-6 py-2 border border-slate-300 rounded-full hover:bg-teal-600 hover:text-white transition duration-200 btn-active">Khi T·ª∑ Gi√° TƒÇNG üìà</button>
                <button id="btn-decrease" class="px-6 py-2 border border-slate-300 rounded-full hover:bg-teal-600 hover:text-white transition duration-200">Khi T·ª∑ Gi√° GI·∫¢M üìâ</button>
            </div>

            <div class="bg-white p-6 md:p-8 rounded-xl shadow-lg grid md:grid-cols-5 gap-8 items-center">
                <div class="md:col-span-2">
                    <h3 id="scenario-title" class="text-xl font-bold mb-4 text-teal-700">K·ªãch b·∫£n 1: T·ª∑ gi√° USD/VND tƒÉng (VND m·∫•t gi√°)</h3>
                    <div id="scenario-text" class="space-y-4 text-slate-600">
                        <p>Gi·∫£ s·ª≠ t·ª∑ gi√° tƒÉng t·ª´ <span class="font-semibold">25,000</span> l√™n <span class="font-semibold">26,000</span> VND/USD.</p>
                        <p>Doanh nghi·ªáp s·∫Ω ph·∫£i b·ªè ra nhi·ªÅu ti·ªÅn Vi·ªát h∆°n ƒë·ªÉ mua c√πng m·ªôt l∆∞·ª£ng USD. ƒêi·ªÅu n√†y l√†m <span class="font-bold text-red-600">tƒÉng chi ph√≠ ƒë·∫ßu v√†o</span> b·∫±ng VND, d√π gi√° d·∫ßu th·∫ø gi·ªõi kh√¥ng ƒë·ªïi.</p>
                        <p class="p-3 bg-red-50 text-red-800 rounded-lg">‚û°Ô∏è <span class="font-bold">T√°c ƒë·ªông ti√™u c·ª±c:</span> G√¢y √°p l·ª±c l√†m tƒÉng gi√° b√°n l·∫ª xƒÉng d·∫ßu trong n∆∞·ªõc ƒë·ªÉ b√π ƒë·∫Øp chi ph√≠.</p>
                    </div>
                </div>
                <div class="md:col-span-3">
                    <div class="chart-container">
                        <canvas id="impactChart"></canvas>
                    </div>
                </div>
            </div>
        </section>

        <section id="section-5" class="mb-16">
            <h2 class="text-3xl font-bold mb-2 text-center text-slate-800">5. H·ªèi Chuy√™n Gia Kinh T·∫ø AI</h2>
            <p class="text-center text-lg mb-8 text-slate-600">B·∫°n c√≥ th·∫Øc m·∫Øc v·ªÅ kinh t·∫ø? H√£y h·ªèi chuy√™n gia AI c·ªßa ch√∫ng t√¥i ƒë·ªÉ ƒë∆∞·ª£c gi·∫£i th√≠ch ƒë∆°n gi·∫£n.</p>
            <div class="bg-white p-8 rounded-xl shadow-lg max-w-4xl mx-auto">
                <div class="mb-4">
                    <textarea id="ai-expert-question" rows="3" class="w-full p-3 border border-slate-300 rounded-lg focus:ring-2 focus:ring-teal-500 focus:border-teal-500 outline-none" placeholder="V√≠ d·ª•: L·∫°m ph√°t l√† g√¨?"></textarea>
                </div>
                <button id="ask-expert-btn" class="w-full bg-teal-600 text-white font-bold py-3 px-4 rounded-lg hover:bg-teal-700 transition duration-200 flex items-center justify-center">
                    G·ª≠i c√¢u h·ªèi
                </button>
                <div id="expert-loader" class="mt-6 hidden justify-center">
                    <div class="loader"></div>
                </div>
                <div id="expert-answer" class="mt-6 p-4 bg-slate-50 rounded-lg border border-slate-200 text-slate-700 leading-relaxed" style="display: none;"></div>
            </div>
        </section>

        <section id="section-6">
            <h2 class="text-3xl font-bold mb-2 text-center text-slate-800">6. Ph√¢n T√≠ch T√°c ƒê·ªông T·ª´ Tin T·ª©c</h2>
            <p class="text-center text-lg mb-8 text-slate-600">Nh·∫≠p m·ªôt ch·ªß ƒë·ªÅ tin t·ª©c (v√≠ d·ª•: "OPEC c·∫Øt gi·∫£m s·∫£n l∆∞·ª£ng") ƒë·ªÉ AI ph√¢n t√≠ch t√°c ƒë·ªông ti·ªÅm t√†ng ƒë·∫øn gi√° xƒÉng Vi·ªát Nam.</p>
            <div class="bg-white p-8 rounded-xl shadow-lg max-w-4xl mx-auto">
                <div class="flex flex-col sm:flex-row gap-4">
                    <input type="text" id="news-topic-input" class="flex-grow p-3 border border-slate-300 rounded-lg focus:ring-2 focus:ring-teal-500 focus:border-teal-500 outline-none" placeholder="Nh·∫≠p ch·ªß ƒë·ªÅ tin t·ª©c ·ªü ƒë√¢y...">
                    <button id="analyze-news-btn" class="bg-teal-600 text-white font-bold py-3 px-6 rounded-lg hover:bg-teal-700 transition duration-200 flex items-center justify-center">
                        ‚ú® Ph√¢n t√≠ch
                    </button>
                </div>
                 <div id="news-loader" class="mt-6 hidden justify-center">
                    <div class="loader"></div>
                </div>
                <div id="news-analysis" class="mt-6 p-4 bg-slate-50 rounded-lg border border-slate-200 text-slate-700 leading-relaxed" style="display: none;"></div>
            </div>
        </section>

    </main>

    <footer class="bg-slate-800 text-white mt-16">
        <div class="container mx-auto px-4 py-6 text-center text-slate-400">
            <p>&copy; 2025 - Ph√¢n t√≠ch b·ªüi AI. Th√¥ng tin ch·ªâ mang t√≠nh ch·∫•t tham kh·∫£o v√† minh h·ªça.</p>
        </div>
    </footer>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const usdPriceInput = document.getElementById('usd-price');
            const rateSlider = document.getElementById('exchange-rate-slider');
            const rateDisplay = document.getElementById('rate-display');
            const vndPriceDisplay = document.getElementById('vnd-price');

            const formatter = new Intl.NumberFormat('vi-VN', {
                style: 'currency',
                currency: 'VND',
                minimumFractionDigits: 0
            });

            function updateSimulator() {
                const usdPrice = parseFloat(usdPriceInput.value) || 0;
                const rate = parseFloat(rateSlider.value);
                const vndPrice = usdPrice * rate;

                rateDisplay.textContent = new Intl.NumberFormat('vi-VN').format(rate);
                vndPriceDisplay.textContent = formatter.format(vndPrice);
            }

            usdPriceInput.addEventListener('input', updateSimulator);
            rateSlider.addEventListener('input', updateSimulator);
            
            updateSimulator();

            const scenarioTitle = document.getElementById('scenario-title');
            const scenarioText = document.getElementById('scenario-text');
            const btnIncrease = document.getElementById('btn-increase');
            const btnDecrease = document.getElementById('btn-decrease');

            const textIncrease = `
                <p>Gi·∫£ s·ª≠ t·ª∑ gi√° tƒÉng t·ª´ <span class="font-semibold">25,000</span> l√™n <span class="font-semibold">26,000</span> VND/USD.</p>
                <p>Doanh nghi·ªáp s·∫Ω ph·∫£i b·ªè ra nhi·ªÅu ti·ªÅn Vi·ªát h∆°n ƒë·ªÉ mua c√πng m·ªôt l∆∞·ª£ng USD. ƒêi·ªÅu n√†y l√†m <span class="font-bold text-red-600">tƒÉng chi ph√≠ ƒë·∫ßu v√†o</span> b·∫±ng VND, d√π gi√° d·∫ßu th·∫ø gi·ªõi kh√¥ng ƒë·ªïi.</p>
                <p class="p-3 bg-red-50 text-red-800 rounded-lg">‚û°Ô∏è <span class="font-bold">T√°c ƒë·ªông ti√™u c·ª±c:</span> G√¢y √°p l·ª±c l√†m tƒÉng gi√° b√°n l·∫ª xƒÉng d·∫ßu trong n∆∞·ªõc ƒë·ªÉ b√π ƒë·∫Øp chi ph√≠.</p>
            `;
            const textDecrease = `
                <p>Gi·∫£ s·ª≠ t·ª∑ gi√° gi·∫£m t·ª´ <span class="font-semibold">25,000</span> xu·ªëng <span class="font-semibold">24,000</span> VND/USD.</p>
                <p>Doanh nghi·ªáp s·∫Ω ch·ªâ c·∫ßn b·ªè ra √≠t ti·ªÅn Vi·ªát h∆°n ƒë·ªÉ mua c√πng m·ªôt l∆∞·ª£ng USD. ƒêi·ªÅu n√†y l√†m <span class="font-bold text-green-600">gi·∫£m chi ph√≠ ƒë·∫ßu v√†o</span> b·∫±ng VND.</p>
                <p class="p-3 bg-green-50 text-green-800 rounded-lg">‚û°Ô∏è <span class="font-bold">T√°c ƒë·ªông t√≠ch c·ª±c:</span> Gi·∫£m √°p l·ª±c l√™n gi√° b√°n l·∫ª, c√≥ th·ªÉ gi√∫p b√¨nh ·ªïn ho·∫∑c gi·∫£m gi√° xƒÉng d·∫ßu.</p>
            `;

            const basePriceUSD = 80;
            const baseRate = 25000;
            const increasedRate = 26000;
            const decreasedRate = 24000;

            const baseCostVND = basePriceUSD * baseRate;
            const increasedCostVND = basePriceUSD * increasedRate;
            const decreasedCostVND = basePriceUSD * decreasedRate;

            const ctx = document.getElementById('impactChart').getContext('2d');
            const impactChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ['Gi√° G·ªëc (VND)', 'Gi√° Sau Thay ƒê·ªïi (VND)'],
                    datasets: [{
                        label: 'Chi ph√≠ nh·∫≠p kh·∫©u 1 th√πng d·∫ßu (VND)',
                        data: [baseCostVND, increasedCostVND],
                        backgroundColor: ['rgba(59, 130, 246, 0.6)', 'rgba(239, 68, 68, 0.6)'],
                        borderColor: ['rgba(59, 130, 246, 1)', 'rgba(239, 68, 68, 1)'],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: { y: { beginAtZero: true, ticks: { callback: (v) => new Intl.NumberFormat('vi-VN').format(v) + ' ‚Ç´' } } },
                    plugins: { legend: { display: false }, tooltip: { callbacks: { label: (c) => `${c.dataset.label || ''}: ${formatter.format(c.parsed.y)}` } } }
                }
            });

            function updateScenario(type) {
                if (type === 'increase') {
                    btnIncrease.classList.add('btn-active');
                    btnDecrease.classList.remove('btn-active');
                    scenarioTitle.textContent = 'K·ªãch b·∫£n 1: T·ª∑ gi√° USD/VND tƒÉng (VND m·∫•t gi√°)';
                    scenarioText.innerHTML = textIncrease;
                    impactChart.data.datasets[0].data = [baseCostVND, increasedCostVND];
                    impactChart.data.datasets[0].backgroundColor = ['rgba(59, 130, 246, 0.6)', 'rgba(239, 68, 68, 0.6)'];
                    impactChart.data.datasets[0].borderColor = ['rgba(59, 130, 246, 1)', 'rgba(239, 68, 68, 1)'];

                } else {
                    btnDecrease.classList.add('btn-active');
                    btnIncrease.classList.remove('btn-active');
                    scenarioTitle.textContent = 'K·ªãch b·∫£n 2: T·ª∑ gi√° USD/VND gi·∫£m (VND l√™n gi√°)';
                    scenarioText.innerHTML = textDecrease;
                    impactChart.data.datasets[0].data = [baseCostVND, decreasedCostVND];
                    impactChart.data.datasets[0].backgroundColor = ['rgba(59, 130, 246, 0.6)', 'rgba(22, 163, 74, 0.6)'];
                    impactChart.data.datasets[0].borderColor = ['rgba(59, 130, 246, 1)', 'rgba(22, 163, 74, 1)'];
                }
                impactChart.update();
            }

            btnIncrease.addEventListener('click', () => updateScenario('increase'));
            btnDecrease.addEventListener('click', () => updateScenario('decrease'));
            
            document.querySelectorAll('a[href^="#"]').forEach(anchor => {
                anchor.addEventListener('click', function (e) {
                    e.preventDefault();
                    document.querySelector(this.getAttribute('href')).scrollIntoView({ behavior: 'smooth' });
                });
            });

            const apiKey = ""; 
            const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;

            function formatResponseText(text) {
                return text.replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>').replace(/\*(.*?)\*/g, '<em>$1</em>').replace(/\n/g, '<br>');
            }

            async function callGeminiAPI(prompt, systemInstruction = null, useSearch = false, retries = 3, delay = 1000) {
                const payload = { contents: [{ parts: [{ text: prompt }] }] };
                if (useSearch) payload.tools = [{ "google_search": {} }];
                if (systemInstruction) payload.systemInstruction = { parts: [{ text: systemInstruction }] };

                for (let i = 0; i < retries; i++) {
                    try {
                        const response = await fetch(apiUrl, {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify(payload)
                        });
                        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
                        const result = await response.json();
                        const candidate = result.candidates?.[0];
                        if (candidate && candidate.content?.parts?.[0]?.text) {
                            return candidate.content.parts[0].text;
                        } else {
                            throw new Error("Invalid response structure from API.");
                        }
                    } catch (error) {
                        console.error(`Attempt ${i + 1} failed:`, error);
                        if (i === retries - 1) return "ƒê√£ x·∫£y ra l·ªói khi k·∫øt n·ªëi ƒë·∫øn AI. Vui l√≤ng th·ª≠ l·∫°i sau.";
                        await new Promise(res => setTimeout(res, delay));
                        delay *= 2;
                    }
                }
            }

            const askExpertBtn = document.getElementById('ask-expert-btn');
            const expertQuestionInput = document.getElementById('ai-expert-question');
            const expertAnswerDiv = document.getElementById('expert-answer');
            const expertLoader = document.getElementById('expert-loader');
            
            askExpertBtn.addEventListener('click', async () => {
                const question = expertQuestionInput.value.trim();
                if (!question) return;

                expertAnswerDiv.style.display = 'none';
                expertLoader.style.display = 'flex';
                askExpertBtn.disabled = true;

                const systemInstruction = "B·∫°n l√† m·ªôt chuy√™n gia kinh t·∫ø th√¢n thi·ªán. H√£y tr·∫£ l·ªùi c√°c c√¢u h·ªèi v·ªÅ kinh t·∫ø, t√†i ch√≠nh, v√† c√°c ch·ªß ƒë·ªÅ li√™n quan m·ªôt c√°ch ƒë∆°n gi·∫£n, r√µ r√†ng v√† d·ªÖ hi·ªÉu cho ng∆∞·ªùi kh√¥ng c√≥ chuy√™n m√¥n. S·ª≠ d·ª•ng v√≠ d·ª• t·ª´ Vi·ªát Nam khi ph√π h·ª£p.";
                const response = await callGeminiAPI(question, systemInstruction, false);

                expertAnswerDiv.innerHTML = formatResponseText(response);
                expertLoader.style.display = 'none';
                expertAnswerDiv.style.display = 'block';
                askExpertBtn.disabled = false;
            });

            const analyzeNewsBtn = document.getElementById('analyze-news-btn');
            const newsTopicInput = document.getElementById('news-topic-input');
            const newsAnalysisDiv = document.getElementById('news-analysis');
            const newsLoader = document.getElementById('news-loader');

            analyzeNewsBtn.addEventListener('click', async () => {
                const topic = newsTopicInput.value.trim();
                if (!topic) return;

                newsAnalysisDiv.style.display = 'none';
                newsLoader.style.display = 'flex';
                analyzeNewsBtn.disabled = true;

                const prompt = `D·ª±a tr√™n nh·ªØng th√¥ng tin m·ªõi nh·∫•t t·ª´ t√¨m ki·∫øm tr√™n web, h√£y ph√¢n t√≠ch ng·∫Øn g·ªçn nh·ªØng t√°c ƒë·ªông c√≥ th·ªÉ c√≥ c·ªßa ch·ªß ƒë·ªÅ sau ƒë√¢y ƒë·ªëi v·ªõi gi√° xƒÉng d·∫ßu t·∫°i Vi·ªát Nam: "${topic}". Tr√¨nh b√†y c√°c ƒëi·ªÉm ch√≠nh m·ªôt c√°ch r√µ r√†ng v√† s√∫c t√≠ch.`;
                const response = await callGeminiAPI(prompt, null, true);

                newsAnalysisDiv.innerHTML = formatResponseText(response);
                newsLoader.style.display = 'none';
                newsAnalysisDiv.style.display = 'block';
                analyzeNewsBtn.disabled = false;
            });
        });
    </script>
</body>
</html>

